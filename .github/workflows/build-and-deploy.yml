name: Build & Deploy All

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build with Babel
      run: |
        echo "üìÅ VOR dem Build:"
        ls -la
        echo ""
        echo "üìÅ scripts Ordner:"
        ls -la scripts/ || echo "‚ùå scripts/ existiert nicht!"
        echo ""
        
        rm -rf dist
        mkdir -p dist
        
        # BABEL BUILD MIT DETAILIERTEM OUTPUT
        echo "üöÄ Starte Babel Build..."
        npx babel scripts --out-dir dist --copy-files --presets @babel/preset-env,@babel/preset-react --verbose
        
        echo "üìÅ NACH Babel Build:"
        ls -la dist/ || echo "‚ùå dist/ ist leer!"
        echo ""
        echo "üîç Components Ordner:"
        ls -la dist/components/ 2>/dev/null || echo "‚ùå components/ nicht gefunden!"
        echo ""
        echo "üîç Utils Ordner:"
        ls -la dist/utils/ 2>/dev/null || echo "‚ùå utils/ nicht gefunden!"
        
        # Kopiere index.html und styles
        cp index.html dist/
        cp -r styles/ dist/styles/ 2>/dev/null || echo "‚ö†Ô∏è  styles nicht gefunden"
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        
- name: Build with Babel
  run: |
    rm -rf dist
    # UMD Transformation f√ºr Browser-Kompatibilit√§t
    npx babel scripts --out-dir dist --copy-files \
      --presets=@babel/preset-env,@babel/preset-react \
      --plugins=@babel/plugin-transform-modules-umd
    
    echo "‚úÖ Build mit UMD Transformation abgeschlossen"
